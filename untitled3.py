# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EpIv45lJzolrLewSoAbM0xnqnEayRyB9
"""

!pip install openai textstat python-dotenv

import openai

# Replace with your API key or use Google Colab secrets (recommended)
openai.api_key = "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"

import textstat

def generate_prompt(keywords, content_type):
    return (
        f"Write a {content_type} that includes the following keywords: {', '.join(keywords)}.\n"
        "Ensure the content is engaging, readable, and sounds natural. Use the keywords organically."
    )

def generate_content(prompt):
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "You are a helpful writing assistant."},
            {"role": "user", "content": prompt}
        ],
        temperature=0.7,
        max_tokens=800
    )
    return response['choices'][0]['message']['content']

def evaluate_content(text, keywords):
    score = textstat.flesch_reading_ease(text)
    keyword_count = {kw.strip(): text.lower().count(kw.strip().lower()) for kw in keywords}
    return score, keyword_count

keywords = input("Enter keywords separated by commas: ").split(",")
content_type = input("Enter content type (e.g., blog, product description): ")

prompt = generate_prompt(keywords, content_type)
content = generate_content(prompt)

print("\n--- Generated Content ---\n")
print(content)

readability_score, keyword_usage = evaluate_content(content, keywords)
print("\n--- Readability Score ---\n", readability_score)
print("\n--- Keyword Usage ---\n", keyword_usage)

# Optionally save content
with open("output.txt", "w", encoding="utf-8") as f:
    f.write(content)